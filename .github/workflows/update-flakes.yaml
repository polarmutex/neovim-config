name: update-flakes
on:
  schedule:
    - cron: "50 */6 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  get-flakes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-flakes.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - id: get-flakes
        run: |
          get_flake_inputs() {
            nix flake metadata --json \
              | jq -c '
                  .locks.nodes.root.inputs
                  | {flake: keys}'
          }

          echo "::set-output name=matrix::$(get_flake_inputs)"

  flake-update:
    name: update-${{ matrix.flake }}
    runs-on: ubuntu-latest
    needs: get-flakes
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-flakes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix

      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_KEY }}

      - uses: cpcloud/flake-update-action@v1.0.4
        with:
          dependency: ${{ matrix.flake }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-token: ${{ steps.generate-token.outputs.token }}
          pull-request-author: "polarmutex[bot] <polarmutex[bot]@users.noreply.github.com>"
          pull-request-labels: dependencies,autorebase:opt-in
          automerge: true
          delete-branch: true
